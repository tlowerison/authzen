(function() {var implementors = {
"authzen_core":[["impl&lt;Subject, Action: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, Object: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, Input, Context&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"struct\" href=\"authzen_core/struct.Event.html\" title=\"struct authzen_core::Event\">Event</a>&lt;Subject, Action, Object, Input, Context&gt;"]],
"authzen_diesel_core":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"struct\" href=\"authzen_diesel_core/paginate/struct.Page.html\" title=\"struct authzen_diesel_core::paginate::Page\">Page</a>"],["impl&lt;K&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"struct\" href=\"authzen_diesel_core/paginate/struct.Paged.html\" title=\"struct authzen_diesel_core::paginate::Paged\">Paged</a>&lt;K&gt;"]],
"authzen_opa_core":[["impl&lt;'a: 'b, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"struct\" href=\"authzen_opa_core/struct.OPAPolicyASTNodeRefRef.html\" title=\"struct authzen_opa_core::OPAPolicyASTNodeRefRef\">OPAPolicyASTNodeRefRef</a>&lt;'a, 'b&gt;"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"struct\" href=\"authzen_opa_core/struct.OPAQueryResult.html\" title=\"struct authzen_opa_core::OPAQueryResult\">OPAQueryResult</a>"],["impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"enum\" href=\"authzen_opa_core/enum.OPAPolicyPathNode.html\" title=\"enum authzen_opa_core::OPAPolicyPathNode\">OPAPolicyPathNode</a>&lt;'a&gt;"],["impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"struct\" href=\"authzen_opa_core/struct.OPAPolicyASTNodeRef.html\" title=\"struct authzen_opa_core::OPAPolicyASTNodeRef\">OPAPolicyASTNodeRef</a>&lt;'a&gt;"],["impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"enum\" href=\"authzen_opa_core/enum.CowSlice.html\" title=\"enum authzen_opa_core::CowSlice\">CowSlice</a>&lt;'a, T&gt;"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"enum\" href=\"authzen_opa_core/enum.DisableAuthorization.html\" title=\"enum authzen_opa_core::DisableAuthorization\">DisableAuthorization</a>"]],
"authzen_proc_macro_util":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"struct\" href=\"authzen_proc_macro_util/struct.UnmatchedPathPrefix.html\" title=\"struct authzen_proc_macro_util::UnmatchedPathPrefix\">UnmatchedPathPrefix</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"struct\" href=\"authzen_proc_macro_util/struct.MatchPathError.html\" title=\"struct authzen_proc_macro_util::MatchPathError\">MatchPathError</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()