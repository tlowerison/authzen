[package]
name = "authzen-core"
version.workspace = true
edition.workspace = true
authors.workspace = true
build = "../build.rs"

[build-dependencies]
rustc_version.workspace = true

[dependencies]
async-trait.workspace = true
authzen-proc-macros.workspace = true
cfg-if.workspace = true
derivative.workspace = true
derive-getters.workspace = true
derive_more.workspace = true
futures.workspace = true
serde.workspace = true
serde_with.workspace = true
typed-builder.workspace = true

anyhow = { workspace = true, optional = true }
authzen-diesel = { workspace = true, optional = true }
authzen-opa = { workspace = true, optional = true }
axum = { workspace = true, optional = true, features = ["headers", "macros"] }
chrono = { workspace = true, optional = true }
diesel = { workspace = true, optional = true }
diesel-async = { workspace = true, optional = true }
http = { workspace = true, optional = true }
hyper = { workspace = true, optional = true }
log = { workspace = true, optional = true }
mongodb = { workspace = true, optional = true }
serde_json = { workspace = true, optional = true }
serde_plain = { workspace = true, optional = true }
service-util = { workspace = true, optional = true }
tower = { workspace = true, optional = true }
tower-http = { workspace = true, optional = true, features = ["auth", "catch-panic", "compression-gzip", "cors", "request-id", "trace", "util"] }
tracing = { workspace = true, optional = true }
url = { workspace = true, optional = true }
uuid = { workspace = true, optional = true }

[features]
diesel-storage-backend = ["authzen-diesel", "diesel", "diesel-async", "uuid"]
diesel-mysql = ["diesel-storage-backend", "diesel/mysql", "diesel-async/mysql", "authzen-diesel/mysql"]
diesel-postgres = ["diesel-storage-backend", "diesel/postgres", "diesel-async/postgres", "authzen-diesel/postgres"]
extra-traits = ["service-util"]
mongodb-tx-cache = ["anyhow", "chrono", "log", "mongodb", "service-util/client", "url"]
opa-decision-maker = ["authzen-opa", "hyper", "serde_json", "service-util/trace"]
policy-information-point = ["http", "serde_json", "serde_plain", "service-util/try-join-safe"]
policy-information-point-server = ["axum", "axum/headers", "log", "policy-information-point", "service-util/axum-06", "service-util/server", "service-util/trace", "tower", "tower-http", "uuid"]
tracing = ["dep:tracing"]
